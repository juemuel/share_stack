import{_ as a,o as e,c as l,V as s}from"./chunks/framework.c463baea.js";const m=JSON.parse('{"title":"Bug与问题记录","description":"","frontmatter":{},"headers":[],"relativePath":"FECommon/F&Q/index.md","lastUpdated":null}'),t={name:"FECommon/F&Q/index.md"},i=s(`<h1 id="bug与问题记录" tabindex="-1">Bug与问题记录 <a class="header-anchor" href="#bug与问题记录" aria-label="Permalink to &quot;Bug与问题记录&quot;">​</a></h1><h2 id="一、系统与服务端" tabindex="-1">一、系统与服务端 <a class="header-anchor" href="#一、系统与服务端" aria-label="Permalink to &quot;一、系统与服务端&quot;">​</a></h2><h3 id="_1-1-git问题" tabindex="-1">1.1 Git问题 <a class="header-anchor" href="#_1-1-git问题" aria-label="Permalink to &quot;1.1 Git问题&quot;">​</a></h3><ul><li>Git push报错 <ul><li><code>Total 7072 (delta 2508), reused 6844 (delta 2376), pack-reused 0</code><ol><li>git config --global sendpack.sideband false</li><li>git config --local sendpack.sideband false</li><li>git config --global http.postBuffer 524288000</li><li>git config --global https.postbuffer 524288000</li><li>git config --global -l</li><li>git config --local -l</li><li>执行完这些命令后，再上传git push -u origin master</li></ol></li><li><code>error: failed to push some refs to</code></li><li>error: RPC failed; result=22, HTTP code = 413</li><li>error: RPC failed; HTTP 403 curl 18 transfer closed with 22 bytes remaining to read</li><li><code>LibreSSL SSL_read: error:02FFF03C:system library:func(4095):Operation timed out, errno 60</code><ol><li>在host中添加github的ip：<code>140.82.113.4 github.com</code>即可</li></ol></li><li><code>error: remote origin already exists.</code><ul><li>先git <strong>remote</strong> rm <strong>origin</strong>删除远程库，再传</li></ul></li><li><code>Empty reply from server</code>： <ul><li><code>git fetch origin --prune</code>，从远程GIt获取最新的分支和饮用，并删除本地中不存在于远程服务器的分支和引用</li></ul></li></ul></li><li>diverged异常：<code>Your branch and &#39;origin/main&#39; have diverged</code><ul><li><code>git fetch origin</code></li><li><code>git reset --hard origin/main</code></li></ul></li><li>git clone报错 ^5d6adc <ul><li>403错误</li></ul></li></ul><h3 id="_1-2-系统问题" tabindex="-1">1.2 系统问题 <a class="header-anchor" href="#_1-2-系统问题" aria-label="Permalink to &quot;1.2 系统问题&quot;">​</a></h3><h4 id="mac" tabindex="-1">Mac <a class="header-anchor" href="#mac" aria-label="Permalink to &quot;Mac&quot;">​</a></h4><ul><li>安装后打开，显示「文件已损坏」或者安装完打开没有反应（由于软件没有签名导致） <ul><li>信任开发者：<code>sudo spctl --master-disable</code></li><li>放行软件（以picgo为例）：<code>xattr -cr /Applications/PicGo.app</code></li><li>即可成功</li><li>如果提示以下内容<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">option -r not recognized</span></span>
<span class="line"><span style="color:#A6ACCD;">usage: xattr [-slz] file [file ...]</span></span>
<span class="line"><span style="color:#A6ACCD;">	   xattr -p [-slz] attr_name file [file ...]</span></span>
<span class="line"><span style="color:#A6ACCD;">	   xattr -w [-sz] attr_name attr_value file [file ...]</span></span>
<span class="line"><span style="color:#A6ACCD;">	   xattr -d [-s] attr_name file [file ...]</span></span>
<span class="line"><span style="color:#A6ACCD;">	   xattr -c [-s] file [file ...]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">The first form lists the names of all xattrs on the given file(s).</span></span>
<span class="line"><span style="color:#A6ACCD;">The second form (-p) prints the value of the xattr attr_name.</span></span>
<span class="line"><span style="color:#A6ACCD;">The third form (-w) sets the value of the xattr attr_name to attr_value.</span></span>
<span class="line"><span style="color:#A6ACCD;">The fourth form (-d) deletes the xattr attr_name.</span></span>
<span class="line"><span style="color:#A6ACCD;">The fifth form (-c) deletes (clears) all xattrs.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">options:</span></span>
<span class="line"><span style="color:#A6ACCD;">  -h: print this help</span></span>
<span class="line"><span style="color:#A6ACCD;">  -s: act on symbolic links themselves rather than their targets</span></span>
<span class="line"><span style="color:#A6ACCD;">  -l: print long format (attr_name: attr_value)</span></span>
<span class="line"><span style="color:#A6ACCD;">  -z: compress or decompress (if compressed) attribute value in zip format</span></span></code></pre></div></li><li>执行命令<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">xattr -c /Applications/PicGo.app/*</span></span></code></pre></div></li><li>如果上面描述的命令仍然没有效果，可以试试下面的命令：<div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sudo xattr -d com.apple.quarantine /Applications/PicGo.app/</span></span></code></pre></div></li></ul></li></ul><h2 id="二、前端" tabindex="-1">二、前端 <a class="header-anchor" href="#二、前端" aria-label="Permalink to &quot;二、前端&quot;">​</a></h2><h3 id="_2-1-版本问题-npm" tabindex="-1">2.1 版本问题（npm） <a class="header-anchor" href="#_2-1-版本问题-npm" aria-label="Permalink to &quot;2.1 版本问题（npm）&quot;">​</a></h3><ul><li>安装末尾添加：<code>--legacy-peer-deps</code></li></ul><h3 id="_2-2-react问题" tabindex="-1">2.2 React问题 <a class="header-anchor" href="#_2-2-react问题" aria-label="Permalink to &quot;2.2 React问题&quot;">​</a></h3><h4 id="rreact-18下-useeffect中ref属性undefined问题" tabindex="-1">Rreact 18下，useEffect中ref属性undefined问题 <a class="header-anchor" href="#rreact-18下-useeffect中ref属性undefined问题" aria-label="Permalink to &quot;Rreact 18下，useEffect中ref属性undefined问题&quot;">​</a></h4><ul><li>useEffect + promise + React.strictMode ✅</li><li>useEffect + async await + react.strictMode ❌</li><li>useCallback + useEffect +promise + React.strictMode ✅</li></ul><h4 id="react18与material-不兼容" tabindex="-1">React18与Material 不兼容 <a class="header-anchor" href="#react18与material-不兼容" aria-label="Permalink to &quot;React18与Material 不兼容&quot;">​</a></h4><ul><li>本质是npm版本问题，<code>--legacy-peer-deps</code>可解决</li></ul><h3 id="_2-3-hbuilderx" tabindex="-1">2.3 HbuilderX <a class="header-anchor" href="#_2-3-hbuilderx" aria-label="Permalink to &quot;2.3 HbuilderX&quot;">​</a></h3><h4 id="内置预览对canvas不友好" tabindex="-1">内置预览对canvas不友好 <a class="header-anchor" href="#内置预览对canvas不友好" aria-label="Permalink to &quot;内置预览对canvas不友好&quot;">​</a></h4><ul><li>canvas.context.fillRect预览错误，如图<img src="https://s2.loli.net/2023/05/02/Uv3gdECfDXhPm7p.png" alt="image-20230502144845807"></li></ul><h2 id="三、后端" tabindex="-1">三、后端 <a class="header-anchor" href="#三、后端" aria-label="Permalink to &quot;三、后端&quot;">​</a></h2>`,19),n=[i];function o(r,c,p,d,h,u){return e(),l("div",null,n)}const g=a(t,[["render",o]]);export{m as __pageData,g as default};
