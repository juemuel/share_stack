import{_ as a,o as e,c as l,V as i}from"./chunks/framework.0fd66c21.js";const m=JSON.parse('{"title":"📖 前端工作流","description":"","frontmatter":{},"headers":[],"relativePath":"Workflows/index.md","lastUpdated":1685683679000}'),t={name:"Workflows/index.md"},r=i(`<h1 id="📖-前端工作流" tabindex="-1">📖 前端工作流 <a class="header-anchor" href="#📖-前端工作流" aria-label="Permalink to &quot;📖 前端工作流&quot;">​</a></h1><blockquote><p>该文档将逐步整理前端工作流的技术工具官网与文档；部分包含简单使用流程，复杂部分将另设文档参考。</p></blockquote><h2 id="零、方案" tabindex="-1">零、方案 <a class="header-anchor" href="#零、方案" aria-label="Permalink to &quot;零、方案&quot;">​</a></h2><blockquote><p>需求确立-&gt;选择方案 框架、样式、API、数据</p></blockquote><h3 id="_1-前端开发方案" tabindex="-1">1. 前端开发方案 <a class="header-anchor" href="#_1-前端开发方案" aria-label="Permalink to &quot;1. 前端开发方案&quot;">​</a></h3><ul><li>1#：原生 +手动引入js包</li><li>2#：原生+ npm按需</li><li>3#：前端纯框架 + npm按需</li><li>4#：前段框架脚手架 + npm按需</li></ul><h3 id="_2-后端开发方案" tabindex="-1">2. 后端开发方案 <a class="header-anchor" href="#_2-后端开发方案" aria-label="Permalink to &quot;2. 后端开发方案&quot;">​</a></h3><ul><li>本地：前端｜后端、一般api</li><li>本地*：前端｜后端、地区限制api <ul><li>1#：cloudflare worker（代理API请求，支持本地或部署） <ul><li>前端｜后端--[敏感参数]-&gt;cfw转发-&gt;地区限制api</li><li>只是前端部署，让用户填key的项目，推荐</li><li>如果业务里有自己的key，那不推荐</li></ul></li><li>2#：Vercel（线上环境）</li></ul></li><li>内网：cloudflare，API Proxy（cloudflare worker脚本代理）</li><li>线上部署：前｜后端部署+api+域名</li><li>线上部署*：前｜后端部署+地区限制api+域名 <ul><li>cloudflare 或 Vercel（cloud flare Pages App 部署）</li></ul></li><li>域名配置 <ul><li>购买域名</li><li>域名绑定域名服务器 <ul><li>1# 给域名绑定域名服务器（自动获取域名记录）</li><li>2# 给域名增加域名记录</li></ul></li></ul></li></ul><h3 id="_3-部署方案" tabindex="-1">3. 部署方案 <a class="header-anchor" href="#_3-部署方案" aria-label="Permalink to &quot;3. 部署方案&quot;">​</a></h3><h2 id="一、工具-按需" tabindex="-1">一、工具（按需） <a class="header-anchor" href="#一、工具-按需" aria-label="Permalink to &quot;一、工具（按需）&quot;">​</a></h2><h3 id="_1-1-webpack-构建工具-广" tabindex="-1">1.1 Webpack：构建工具（广） <a class="header-anchor" href="#_1-1-webpack-构建工具-广" aria-label="Permalink to &quot;1.1 Webpack：构建工具（广）&quot;">​</a></h3><ul><li>Doc：<a href="https://webpack.js.org/guides/" target="_blank" rel="noreferrer">Guides | webpack</a>、<a href="https://vue-loader-v14.vuejs.org/zh-cn/configurations/asset-url.html" target="_blank" rel="noreferrer">vue-loader</a></li><li>打包：<code>npx webpack</code></li><li>Exp <ul><li>如果使用webpack打包项目，那么js和css应该作为模块引入到所需要的入口文件中。</li><li>对于export default，import时不用{}</li><li>对于export ...，import时加{}</li></ul></li><li>开发环境&lt;-&gt;（打包的）生产环境比较 <ul><li>css可以在html中使用&lt;-———-&gt;css在js中引入</li><li>html中手动引入script&lt;-———&gt;由webpack打包时自动引入script</li><li>js中需引入require.js库&lt;-—--&gt;js中可直接使用require（webpcak已内置）</li></ul></li></ul><h3 id="_1-2-vite-构建工具-快" tabindex="-1">1.2 Vite：构建工具（快） <a class="header-anchor" href="#_1-2-vite-构建工具-快" aria-label="Permalink to &quot;1.2 Vite：构建工具（快）&quot;">​</a></h3><ul><li>Doc：<a href="https://vitejs.dev/guide/" target="_blank" rel="noreferrer">Getting Started | Vite</a></li><li>使用流程 <ul><li><code>npm create vite@latest .</code>：当前目录为项目名</li><li>选择框架</li><li>开始安装：<code>npm install</code></li></ul></li></ul><h3 id="_1-3-其他构建工具" tabindex="-1">1.3 其他构建工具 <a class="header-anchor" href="#_1-3-其他构建工具" aria-label="Permalink to &quot;1.3 其他构建工具&quot;">​</a></h3><h4 id="grunt" tabindex="-1">Grunt <a class="header-anchor" href="#grunt" aria-label="Permalink to &quot;Grunt&quot;">​</a></h4><h4 id="gulp" tabindex="-1">Gulp <a class="header-anchor" href="#gulp" aria-label="Permalink to &quot;Gulp&quot;">​</a></h4><h4 id="rollup" tabindex="-1">rollup <a class="header-anchor" href="#rollup" aria-label="Permalink to &quot;rollup&quot;">​</a></h4><h4 id="parcel" tabindex="-1">parcel <a class="header-anchor" href="#parcel" aria-label="Permalink to &quot;parcel&quot;">​</a></h4><h3 id="_1-4-其他" tabindex="-1">1.4 其他 <a class="header-anchor" href="#_1-4-其他" aria-label="Permalink to &quot;1.4 其他&quot;">​</a></h3><h4 id="eslint" tabindex="-1">Eslint <a class="header-anchor" href="#eslint" aria-label="Permalink to &quot;Eslint&quot;">​</a></h4><ul><li><code>npx eslint --init</code></li><li>webpack集成 <ul><li>npm安装<code>eslint-loader eslint</code></li><li>webpack配置</li></ul></li><li>通用npm环境 <ul><li>npm安装<code>eslint</code></li><li><code>.eslintrc.json</code>配置</li><li>使用：<code>eslint .</code> 目录 npm install --save-dev eslint eslint-plugin-vue</li></ul></li></ul><h4 id="babel" tabindex="-1">Babel <a class="header-anchor" href="#babel" aria-label="Permalink to &quot;Babel&quot;">​</a></h4><blockquote><p>为了兼容老旧的浏览器，将ES6转为其他类型的模块，如CommonJS。</p></blockquote><ul><li>js库引用 <ul><li>script src引入<code>npm/@babel/standalone</code></li><li>js代码标注babel：<code>&lt;script type=&quot;text/babel&quot;&gt;</code></li><li>编译就交给浏览器了</li></ul></li><li>webpack集成 <ul><li>npm install <code>babel-loader @babel/core @babel/preset-env</code></li><li>webpack配置</li></ul></li><li>npm环境 <ul><li>npm安装 <code>@babel/core @babel/cli @babel/preset-env</code></li><li><code>.babelrc</code>配置</li><li>使用：<code>npx babel xx.js --out-file dist/index.js</code></li></ul></li></ul><h4 id="prettier-自动格式化" tabindex="-1">Prettier(自动格式化) <a class="header-anchor" href="#prettier-自动格式化" aria-label="Permalink to &quot;Prettier(自动格式化)&quot;">​</a></h4><ul><li></li></ul><h2 id="二、前端设计" tabindex="-1">二、前端设计 <a class="header-anchor" href="#二、前端设计" aria-label="Permalink to &quot;二、前端设计&quot;">​</a></h2><h3 id="_2-0-前端ui-ux" tabindex="-1">2.0 前端UI/UX <a class="header-anchor" href="#_2-0-前端ui-ux" aria-label="Permalink to &quot;2.0 前端UI/UX&quot;">​</a></h3><h3 id="_2-1-搭建前端" tabindex="-1">2.1 搭建前端 <a class="header-anchor" href="#_2-1-搭建前端" aria-label="Permalink to &quot;2.1 搭建前端&quot;">​</a></h3><blockquote><p>使用构建工具 或 脚手架 或 应用级框架 搭建项目; npx webpack 或 npm run build</p></blockquote><h4 id="_2-1-1-⭐️原生" tabindex="-1">2.1.1 ⭐️原生 <a class="header-anchor" href="#_2-1-1-⭐️原生" aria-label="Permalink to &quot;2.1.1 ⭐️原生&quot;">​</a></h4><h5 id="_2-1-1-1-原生" tabindex="-1">2.1.1.1 原生 <a class="header-anchor" href="#_2-1-1-1-原生" aria-label="Permalink to &quot;2.1.1.1 原生&quot;">​</a></h5><ul><li><code>import Maps</code>：在原生中以模块化方式引入js库（url可以本地也可以cnd）</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">importmap</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">imports</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">three</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../../../three.js/build/three.module.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">module</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#A6ACCD;">  import * as THREE from &#39;three&#39;; // 浏览器控制台测试，是否引入成功   </span></span>
<span class="line"><span style="color:#A6ACCD;">  console.log(THREE.Scene);   </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h5 id="_2-1-1-2-原生-npm模块引入" tabindex="-1">2.1.1.2 原生+NPM模块引入 <a class="header-anchor" href="#_2-1-1-2-原生-npm模块引入" aria-label="Permalink to &quot;2.1.1.2 原生+NPM模块引入&quot;">​</a></h5><h4 id="_2-1-2-⭐️react" tabindex="-1">2.1.2 ⭐️React <a class="header-anchor" href="#_2-1-2-⭐️react" aria-label="Permalink to &quot;2.1.2 ⭐️React&quot;">​</a></h4><h5 id="_2-1-2-1-webpack-babel" tabindex="-1">2.1.2.1 Webpack+Babel <a class="header-anchor" href="#_2-1-2-1-webpack-babel" aria-label="Permalink to &quot;2.1.2.1 Webpack+Babel&quot;">​</a></h5><h5 id="_2-1-2-2-vite" tabindex="-1">2.1.2.2 Vite <a class="header-anchor" href="#_2-1-2-2-vite" aria-label="Permalink to &quot;2.1.2.2 Vite&quot;">​</a></h5><h5 id="_2-1-2-3-create-react-app" tabindex="-1">2.1.2.3 create-react-app <a class="header-anchor" href="#_2-1-2-3-create-react-app" aria-label="Permalink to &quot;2.1.2.3 create-react-app&quot;">​</a></h5><ul><li>目录下，<code>npx create-react-app ./</code></li><li>调整目录结构：可以删除src、自己建一个新的</li><li>npm run start 或 react-scripts start</li><li>npm run build 或 react-scripts build</li></ul><h5 id="_2-1-2-4-umi-js-路由、ssr、ts" tabindex="-1">2.1.2.4 Umi.js（路由、SSR、TS） <a class="header-anchor" href="#_2-1-2-4-umi-js-路由、ssr、ts" aria-label="Permalink to &quot;2.1.2.4 Umi.js（路由、SSR、TS）&quot;">​</a></h5><h5 id="_2-1-2-5-next-js-文件路由、ssr、ts" tabindex="-1">2.1.2.5 Next.js（文件路由、SSR、TS） <a class="header-anchor" href="#_2-1-2-5-next-js-文件路由、ssr、ts" aria-label="Permalink to &quot;2.1.2.5 Next.js（文件路由、SSR、TS）&quot;">​</a></h5><ul><li><a href="https://www.nextjs.cn/" target="_blank" rel="noreferrer">Next.js</a></li><li><code>npx create-next-app PROJ_NAME</code></li><li><code>npm run dev</code></li></ul><h5 id="_2-1-2-6-craco" tabindex="-1">2.1.2.6 craco <a class="header-anchor" href="#_2-1-2-6-craco" aria-label="Permalink to &quot;2.1.2.6 craco&quot;">​</a></h5><h5 id="_2-1-2-7-react工具" tabindex="-1">2.1.2.7 React工具 <a class="header-anchor" href="#_2-1-2-7-react工具" aria-label="Permalink to &quot;2.1.2.7 React工具&quot;">​</a></h5><ul><li>React DevTools：提供组件树显示</li></ul><h4 id="_2-1-3-⭐️vue" tabindex="-1">2.1.3 ⭐️Vue <a class="header-anchor" href="#_2-1-3-⭐️vue" aria-label="Permalink to &quot;2.1.3 ⭐️Vue&quot;">​</a></h4><blockquote><p>Tips：具体见Vue手册，此处仅为环境搭建方案</p></blockquote><h5 id="_2-1-3-1-webpack" tabindex="-1">2.1.3.1 Webpack <a class="header-anchor" href="#_2-1-3-1-webpack" aria-label="Permalink to &quot;2.1.3.1 Webpack&quot;">​</a></h5><h5 id="_2-1-3-2-vite" tabindex="-1">2.1.3.2 Vite <a class="header-anchor" href="#_2-1-3-2-vite" aria-label="Permalink to &quot;2.1.3.2 Vite&quot;">​</a></h5><ul><li><code>npm create vite@latest</code></li><li>选框架vue、语言ts｜js</li><li><code>npm install</code></li><li>npm run dev</li></ul><h5 id="_2-1-3-3-vue-cli" tabindex="-1">2.1.3.3 Vue-cli <a class="header-anchor" href="#_2-1-3-3-vue-cli" aria-label="Permalink to &quot;2.1.3.3 Vue-cli&quot;">​</a></h5><ul><li><code>npm i vue</code>、<code>npm -i -g @vue/cli</code></li><li>1#vue-cli2.x ：<code>vue init [webpack] myproj</code></li><li>2#vue-cli3.x ： <code>vue create myproj</code></li><li>3#@vue/cli图形 ：<code>vue ui</code><ul><li>查询vue版本：<code>npm list vue -g</code></li><li>查询脚手架版本：<code>vue -V</code>（注意大写）</li></ul></li></ul><h5 id="_2-1-3-4-本地-cdn引入" tabindex="-1">2.1.3.4 本地｜CDN引入 <a class="header-anchor" href="#_2-1-3-4-本地-cdn引入" aria-label="Permalink to &quot;2.1.3.4 本地｜CDN引入&quot;">​</a></h5><ul><li>最新：<code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&gt;&lt;/script&gt;</code></li><li>指定：<code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2.6.14&quot;&gt;&lt;/script&gt;</code></li></ul><h5 id="_2-1-3-5-vue工具" tabindex="-1">2.1.3.5 Vue工具 <a class="header-anchor" href="#_2-1-3-5-vue工具" aria-label="Permalink to &quot;2.1.3.5 Vue工具&quot;">​</a></h5><ul><li>Vetur（vscode的vue snippets工具） <ul><li>输入vue</li><li>输入scss</li></ul></li></ul><h5 id="_2-1-3-6-vue-exp" tabindex="-1">2.1.3.6 Vue Exp <a class="header-anchor" href="#_2-1-3-6-vue-exp" aria-label="Permalink to &quot;2.1.3.6 Vue Exp&quot;">​</a></h5><ul><li>vue中App.vue不设scoped，其他设置</li></ul><h4 id="_2-1-4-⭐️react-native" tabindex="-1">2.1.4 ⭐️React Native <a class="header-anchor" href="#_2-1-4-⭐️react-native" aria-label="Permalink to &quot;2.1.4 ⭐️React Native&quot;">​</a></h4><h5 id="_1-4-1-metro-bundler" tabindex="-1">1.4.1 Metro Bundler <a class="header-anchor" href="#_1-4-1-metro-bundler" aria-label="Permalink to &quot;1.4.1 Metro Bundler&quot;">​</a></h5><h5 id="_1-4-2-expo" tabindex="-1">1.4.2 Expo <a class="header-anchor" href="#_1-4-2-expo" aria-label="Permalink to &quot;1.4.2 Expo&quot;">​</a></h5><h5 id="_1-4-3-cretate-react-native-app" tabindex="-1">1.4.3 cretate-react-native-app <a class="header-anchor" href="#_1-4-3-cretate-react-native-app" aria-label="Permalink to &quot;1.4.3 cretate-react-native-app&quot;">​</a></h5><h4 id="_2-1-5-⭐小程序" tabindex="-1">2.1.5 ⭐小程序 <a class="header-anchor" href="#_2-1-5-⭐小程序" aria-label="Permalink to &quot;2.1.5 ⭐小程序&quot;">​</a></h4><h5 id="_1-5-1-uni-app" tabindex="-1">1.5.1 Uni-App <a class="header-anchor" href="#_1-5-1-uni-app" aria-label="Permalink to &quot;1.5.1 Uni-App&quot;">​</a></h5><ul><li>生命周期 <ul><li>onLaunch：全局只一次</li><li>onLoad：第一次加载</li><li>onShow：</li><li>onHide、onError...</li></ul></li><li>组件生命周期 <ul><li>beforeCreate、<strong>created</strong>(初始化,不可操作dom)</li><li>beforeMount、<strong>mounted</strong>(可操作dom)</li><li>beforeUpdated、updated</li><li>beforeDestroy、destroyed</li></ul></li></ul><h5 id="_1-5-2-微信小程序" tabindex="-1">1.5.2 微信小程序 <a class="header-anchor" href="#_1-5-2-微信小程序" aria-label="Permalink to &quot;1.5.2 微信小程序&quot;">​</a></h5><h3 id="_2-2-引入组件库" tabindex="-1">2.2 引入组件库 <a class="header-anchor" href="#_2-2-引入组件库" aria-label="Permalink to &quot;2.2 引入组件库&quot;">​</a></h3><h4 id="_2-2-1-bootstrap-js-css" tabindex="-1">2.2.1 BootStrap（JS+CSS） <a class="header-anchor" href="#_2-2-1-bootstrap-js-css" aria-label="Permalink to &quot;2.2.1 BootStrap（JS+CSS）&quot;">​</a></h4><ul><li><a href="https://v5.bootcss.com/docs/components/pagination/#%e7%a6%81%e7%94%a8%e5%92%8c%e6%bf%80%e6%b4%bb%e7%8a%b6%e6%80%81" target="_blank" rel="noreferrer">Paination</a>：分页组件</li></ul><h4 id="_2-2-2-antd" tabindex="-1">2.2.2 Antd <a class="header-anchor" href="#_2-2-2-antd" aria-label="Permalink to &quot;2.2.2 Antd&quot;">​</a></h4><h4 id="_2-2-3-elementplus" tabindex="-1">2.2.3 ElementPlus <a class="header-anchor" href="#_2-2-3-elementplus" aria-label="Permalink to &quot;2.2.3 ElementPlus&quot;">​</a></h4><h4 id="_2-2-4-tailblocks" tabindex="-1">2.2.4 TailBlocks <a class="header-anchor" href="#_2-2-4-tailblocks" aria-label="Permalink to &quot;2.2.4 TailBlocks&quot;">​</a></h4><p><a href="https://tailblocks.cc/" target="_blank" rel="noreferrer">Tailblocks — Ready-to-use Tailwind CSS blocks</a></p><h4 id="_2-2-5-material" tabindex="-1">2.2.5 Material <a class="header-anchor" href="#_2-2-5-material" aria-label="Permalink to &quot;2.2.5 Material&quot;">​</a></h4><ul><li><code>npm install @material-ui/core @material-ui/icons</code></li><li>布局型组件 <ul><li>Grid：响应Grid布局</li><li>Container：容器</li><li>Paper：白板</li></ul></li><li>内容型组件 <ul><li>AppBar：App标题</li><li>Typography：内容标题</li></ul></li><li>表单型组件 <ul><li>Button：按钮</li><li>TextField：文本输入框</li></ul></li></ul><h4 id="_2-2-6-vant" tabindex="-1">2.2.6 Vant <a class="header-anchor" href="#_2-2-6-vant" aria-label="Permalink to &quot;2.2.6 Vant&quot;">​</a></h4><ul><li><a href="https://vant-ui.github.io/vant/#/zh-CN/quickstart" target="_blank" rel="noreferrer">快速上手 - Vant 4</a></li></ul><h4 id="_2-2-7-syncfusion" tabindex="-1">2.2.7 Syncfusion <a class="header-anchor" href="#_2-2-7-syncfusion" aria-label="Permalink to &quot;2.2.7 Syncfusion&quot;">​</a></h4><h4 id="_2-2-8-vuetify" tabindex="-1">2.2.8 Vuetify <a class="header-anchor" href="#_2-2-8-vuetify" aria-label="Permalink to &quot;2.2.8 Vuetify&quot;">​</a></h4><ul><li><a href="https://vuetifyjs.com/en/" target="_blank" rel="noreferrer">Vuetify — A Vue Component Framework</a></li></ul><h4 id="_2-2-9-mantine-ui" tabindex="-1">2.2.9 Mantine UI <a class="header-anchor" href="#_2-2-9-mantine-ui" aria-label="Permalink to &quot;2.2.9 Mantine UI&quot;">​</a></h4><ul><li>基础：<code>@mantine/core @mantine/hooks</code></li><li>配合Next SSR：<code>@mantine/next</code></li><li>组件：<code>@mantine/notifications</code></li><li>基本配置：<a href="https://mantine.dev/pages/getting-started/" target="_blank" rel="noreferrer">Getting started | Mantine</a><ul><li>ColorSchemeProvider <ul><li>MatineProvider <ul><li>Notifications <ul><li>Component标签（Next.js React）</li><li>App标签 （React）</li></ul></li></ul></li></ul></li></ul></li></ul><h3 id="_2-3-引入样式库" tabindex="-1">2.3 引入样式库 <a class="header-anchor" href="#_2-3-引入样式库" aria-label="Permalink to &quot;2.3 引入样式库&quot;">​</a></h3><h4 id="_2-3-1-animate-css" tabindex="-1">2.3.1 Animate CSS <a class="header-anchor" href="#_2-3-1-animate-css" aria-label="Permalink to &quot;2.3.1 Animate CSS&quot;">​</a></h4><h4 id="_2-3-2-tailwind-css" tabindex="-1">2.3.2 Tailwind CSS <a class="header-anchor" href="#_2-3-2-tailwind-css" aria-label="Permalink to &quot;2.3.2 Tailwind CSS&quot;">​</a></h4><ul><li>css中引入<code>@tailwind components</code>、<code>@tailwind utilities</code></li><li>配置tailwind.config.js</li><li>配置postcss.config.js</li></ul><h4 id="_2-3-3-windi-css" tabindex="-1">2.3.3 Windi CSS <a class="header-anchor" href="#_2-3-3-windi-css" aria-label="Permalink to &quot;2.3.3 Windi CSS&quot;">​</a></h4><h4 id="_2-3-4-uno-css" tabindex="-1">2.3.4 Uno CSS <a class="header-anchor" href="#_2-3-4-uno-css" aria-label="Permalink to &quot;2.3.4 Uno CSS&quot;">​</a></h4><h3 id="_2-4-引入icon" tabindex="-1">2.4 引入ICON <a class="header-anchor" href="#_2-4-引入icon" aria-label="Permalink to &quot;2.4 引入ICON&quot;">​</a></h3><h4 id="_2-4-0常用icon类型" tabindex="-1">2.4.0常用ICON类型 <a class="header-anchor" href="#_2-4-0常用icon类型" aria-label="Permalink to &quot;2.4.0常用ICON类型&quot;">​</a></h4><h4 id="_2-4-1-bootstrap-icon" tabindex="-1">2.4.1 BootStrap Icon <a class="header-anchor" href="#_2-4-1-bootstrap-icon" aria-label="Permalink to &quot;2.4.1 BootStrap Icon&quot;">​</a></h4><ul><li>引入<a href="https://icons.getbootstrap.com/##CDN" target="_blank" rel="noreferrer">Bootstrap Icons · Official open source SVG icon library for Bootstrap</a></li><li>使用</li><li>常见样式：color、</li></ul><h4 id="_2-4-2-font-awesome-推荐" tabindex="-1">2.4.2 Font Awesome（推荐） <a class="header-anchor" href="#_2-4-2-font-awesome-推荐" aria-label="Permalink to &quot;2.4.2 Font Awesome（推荐）&quot;">​</a></h4><ul><li>官网<a href="https://fontawesome.com/" target="_blank" rel="noreferrer">font Awesome</a></li><li>FA CDN ：<a href="https://fontawesome.com/kits/f5c9bd53df/setup?welcome=yes" target="_blank" rel="noreferrer">Kit | Font Awesome</a>，每个人不同</li><li>Doc：<a href="https://fontawesome.com/docs/web/style/basics" target="_blank" rel="noreferrer">Font Awesome Docs</a>，支持颜色、大小、动画</li><li>技巧：按组设置大小</li><li>特色：list icon、旋转icon、动画icon、文本环绕icon、堆叠icon、定位</li></ul><h4 id="_2-4-3-iconscout" tabindex="-1">2.4.3 IconScout <a class="header-anchor" href="#_2-4-3-iconscout" aria-label="Permalink to &quot;2.4.3 IconScout&quot;">​</a></h4><ul><li><a href="https://iconscout.com/unicons" target="_blank" rel="noreferrer">7,000+ Icon Fonts, SVG, 3D Icons and Animated Icons with Unicons by IconScout</a></li></ul><h4 id="_2-4-4-flaticon-支持png" tabindex="-1">2.4.4 flaticon（支持png） <a class="header-anchor" href="#_2-4-4-flaticon-支持png" aria-label="Permalink to &quot;2.4.4 flaticon（支持png）&quot;">​</a></h4><ul><li>Site： <a href="https://www.flaticon.com/" target="_blank" rel="noreferrer">Vector Icons and Stickers - PNG, SVG, EPS, PSD and CSS</a></li></ul><h4 id="_2-4-5-heroicons-支持svg" tabindex="-1">2.4.5 heroicons（支持svg） <a class="header-anchor" href="#_2-4-5-heroicons-支持svg" aria-label="Permalink to &quot;2.4.5 heroicons（支持svg）&quot;">​</a></h4><ul><li><a href="https://heroicons.com/" target="_blank" rel="noreferrer">Heroicons</a></li></ul><h4 id="_2-4-6-ionicons-支持svg" tabindex="-1">2.4.6 ionicons（支持svg） <a class="header-anchor" href="#_2-4-6-ionicons-支持svg" aria-label="Permalink to &quot;2.4.6 ionicons（支持svg）&quot;">​</a></h4><h4 id="_2-4-7-tabler-icons-支持png、svg" tabindex="-1">2.4.7 tabler Icons（支持png、svg） <a class="header-anchor" href="#_2-4-7-tabler-icons-支持png、svg" aria-label="Permalink to &quot;2.4.7 tabler Icons（支持png、svg）&quot;">​</a></h4><ul><li><a href="https://tabler-icons.io/" target="_blank" rel="noreferrer">Tabler Icons: over 4200 vector icons for web design</a></li><li>npm引入或png、svg导出</li></ul><h4 id="_2-4-8-其他" tabindex="-1">2.4.8 其他 <a class="header-anchor" href="#_2-4-8-其他" aria-label="Permalink to &quot;2.4.8 其他&quot;">​</a></h4><ul><li>Google Fonts带icon：<a href="https://fonts.google.com/" target="_blank" rel="noreferrer">Browse Fonts - Google Fonts</a></li></ul><h3 id="_2-5-npm-js库-前端" tabindex="-1">2.5 npm-JS库（前端） <a class="header-anchor" href="#_2-5-npm-js库-前端" aria-label="Permalink to &quot;2.5 npm-JS库（前端）&quot;">​</a></h3><h4 id="_2-5-0-npm库的兼容性" tabindex="-1">2.5.0 NPM库的兼容性 <a class="header-anchor" href="#_2-5-0-npm库的兼容性" aria-label="Permalink to &quot;2.5.0 NPM库的兼容性&quot;">​</a></h4><ul><li>npm仓库：<a href="https://www.npmjs.com/" target="_blank" rel="noreferrer">npm</a></li><li>兼容性：<a href="https://caniuse.com/" target="_blank" rel="noreferrer">Can I use？</a></li><li>基本使用：<code>npm init</code>、<code>npm install [依赖内容]</code></li></ul><h4 id="_2-5-1-socket-io-client" tabindex="-1">2.5.1 socket.io-client <a class="header-anchor" href="#_2-5-1-socket-io-client" aria-label="Permalink to &quot;2.5.1 socket.io-client&quot;">​</a></h4><ul><li>socket.on</li></ul><h4 id="_2-5-2-jquery" tabindex="-1">2.5.2 Jquery <a class="header-anchor" href="#_2-5-2-jquery" aria-label="Permalink to &quot;2.5.2 Jquery&quot;">​</a></h4><ul><li><a href="https://cdnjs.com/libraries/jquery" target="_blank" rel="noreferrer">jquery - Libraries - cdnjs - The #1 free and open source CDN built to make life easier for developers</a></li></ul><h4 id="_2-5-3-three-js" tabindex="-1">2.5.3 three.js <a class="header-anchor" href="#_2-5-3-three-js" aria-label="Permalink to &quot;2.5.3 three.js&quot;">​</a></h4><ul><li>参考：<a href="http://www.webgl3d.cn/pages/aac9ab/" target="_blank" rel="noreferrer">1. threejs文件包下载和目录简介 | Three.js中文网</a></li><li>Doc：<a href="https://threejs.org/docs/" target="_blank" rel="noreferrer">three.js docs</a></li><li>结构（待整理） <ul><li>Shaders</li><li>网格Mesh <ul><li>Vertices：顶点Vertex <ul><li>法向量normal</li><li>uv坐标</li></ul></li><li>材质 <ul><li>（选）纹理</li></ul></li><li>几何体 <ul><li>（选）纹理图坐标映射</li></ul></li></ul></li></ul></li><li>工具 <ul><li><a href="https://threejs.org/docs/?q=font#examples/en/loaders/FontLoader" target="_blank" rel="noreferrer">FontLoader</a></li></ul></li></ul><h4 id="_2-5-4-sass" tabindex="-1">2.5.4 sass <a class="header-anchor" href="#_2-5-4-sass" aria-label="Permalink to &quot;2.5.4 sass&quot;">​</a></h4><ul><li><code>npm add -D sass</code></li></ul><h4 id="_2-5-5-框架相关" tabindex="-1">2.5.5 框架相关 <a class="header-anchor" href="#_2-5-5-框架相关" aria-label="Permalink to &quot;2.5.5 框架相关&quot;">​</a></h4><ul><li>Vue：<code>npm i vue-route</code></li></ul><h4 id="_2-5-6-loadash-常见算法" tabindex="-1">2.5.6 Loadash（常见算法） <a class="header-anchor" href="#_2-5-6-loadash-常见算法" aria-label="Permalink to &quot;2.5.6 Loadash（常见算法）&quot;">​</a></h4><h4 id="_2-5-7-typescript" tabindex="-1">2.5.7 Typescript <a class="header-anchor" href="#_2-5-7-typescript" aria-label="Permalink to &quot;2.5.7 Typescript&quot;">​</a></h4><ul><li><code>npm i -g typescript</code></li><li>指定编译：<code>tsc xxx.ts [--outfile file-xxx.js -w]</code>,-w改动自动编译 <ul><li>指定编译时忽略chuhi</li></ul></li><li>初始化配置文件：<code>tsc --init</code></li></ul><h4 id="_2-5-8-编辑器" tabindex="-1">2.5.8 编辑器 <a class="header-anchor" href="#_2-5-8-编辑器" aria-label="Permalink to &quot;2.5.8 编辑器&quot;">​</a></h4><ul><li><a href="https://www.npmjs.com/package/vue3-ace-editor" target="_blank" rel="noreferrer">vue3-ace-editor - npm</a></li></ul><h4 id="_2-5-9-dotenv-管理配置和敏感数据" tabindex="-1">2.5.9 dotenv（管理配置和敏感数据） <a class="header-anchor" href="#_2-5-9-dotenv-管理配置和敏感数据" aria-label="Permalink to &quot;2.5.9 dotenv（管理配置和敏感数据）&quot;">​</a></h4><ul><li>在开发环境中，存储应用程序的配置信息和敏感数据</li><li><code>.env</code>文件中key=value的形式组织信息，在项目中p<wbr>rocess.env.key来获取</li><li>在生产环境中有以下方案...</li></ul><h3 id="_2-6-引入字体库" tabindex="-1">2.6 引入字体库 <a class="header-anchor" href="#_2-6-引入字体库" aria-label="Permalink to &quot;2.6 引入字体库&quot;">​</a></h3><ul><li>不同系统中的字体库路径</li></ul><h4 id="_2-6-1-字由" tabindex="-1">2.6.1 字由 <a class="header-anchor" href="#_2-6-1-字由" aria-label="Permalink to &quot;2.6.1 字由&quot;">​</a></h4><h4 id="_2-6-2-google-fonts-外网link" tabindex="-1">2.6.2 Google Fonts（外网link） <a class="header-anchor" href="#_2-6-2-google-fonts-外网link" aria-label="Permalink to &quot;2.6.2 Google Fonts（外网link）&quot;">​</a></h4><ul><li><a href="https://fonts.google.com/specimen/Roboto" target="_blank" rel="noreferrer">Google Fonts</a></li></ul><h3 id="_2-7-seo优化-ssr、ssg" tabindex="-1">2.7 SEO优化（SSR、SSG） <a class="header-anchor" href="#_2-7-seo优化-ssr、ssg" aria-label="Permalink to &quot;2.7 SEO优化（SSR、SSG）&quot;">​</a></h3><blockquote><p>本质是将部署的前端分为前端渲染+前端服务 前端服务将api路由解析为html再返回 浏览器端收到的是完整的html结构</p></blockquote><h4 id="next-js-react-ssr" tabindex="-1">Next.js React SSR <a class="header-anchor" href="#next-js-react-ssr" aria-label="Permalink to &quot;Next.js React SSR&quot;">​</a></h4><h4 id="nust-js-vue-ssr" tabindex="-1">Nust.js Vue SSR <a class="header-anchor" href="#nust-js-vue-ssr" aria-label="Permalink to &quot;Nust.js Vue SSR&quot;">​</a></h4><h3 id="_2-8-classname命名规范" tabindex="-1">2.8 className命名规范 <a class="header-anchor" href="#_2-8-classname命名规范" aria-label="Permalink to &quot;2.8 className命名规范&quot;">​</a></h3><ul><li>参考文章 <ul><li><a href="https://zhuanlan.zhihu.com/p/420248803" target="_blank" rel="noreferrer">奇技淫巧：通过 jsx-runtime 实现自动使用 classnames / clsx - 知乎</a></li></ul></li><li>不同环境下的复杂className命名 <ul><li>React-JS中</li><li>Vue-JS中</li><li>React-TS中</li><li>Vue-TS中</li></ul></li><li>React clsx：</li><li>React classNames</li></ul><h2 id="三、服务端设计" tabindex="-1">三、服务端设计 <a class="header-anchor" href="#三、服务端设计" aria-label="Permalink to &quot;三、服务端设计&quot;">​</a></h2><h3 id="_3-1-node➕js库" tabindex="-1">3.1 Node➕JS库 <a class="header-anchor" href="#_3-1-node➕js库" aria-label="Permalink to &quot;3.1 Node➕JS库&quot;">​</a></h3><h4 id="_3-1-0-内置" tabindex="-1">3.1.0 内置 <a class="header-anchor" href="#_3-1-0-内置" aria-label="Permalink to &quot;3.1.0 内置&quot;">​</a></h4><h4 id="_3-1-1-nodemon" tabindex="-1">3.1.1 nodemon <a class="header-anchor" href="#_3-1-1-nodemon" aria-label="Permalink to &quot;3.1.1 nodemon&quot;">​</a></h4><ul><li><code>npm install nodemon -g</code></li></ul><h4 id="_3-1-2-express" tabindex="-1">3.1.2 express <a class="header-anchor" href="#_3-1-2-express" aria-label="Permalink to &quot;3.1.2 express&quot;">​</a></h4><ul><li>Doc：<a href="http://expressjs.com/" target="_blank" rel="noreferrer">Express</a></li></ul><h4 id="_3-1-3-cors" tabindex="-1">3.1.3 cors <a class="header-anchor" href="#_3-1-3-cors" aria-label="Permalink to &quot;3.1.3 cors&quot;">​</a></h4><h4 id="_3-1-4-socket-io" tabindex="-1">3.1.4 socket.io <a class="header-anchor" href="#_3-1-4-socket-io" aria-label="Permalink to &quot;3.1.4 socket.io&quot;">​</a></h4><ul><li>socket.emit：发送给当前调用该方法的客户端</li><li>socket.broadcast.emit：发送给所有已连接的客户端（除自己）</li><li>io.to(XXX).emit：发送给特定房间的客户端</li></ul><h4 id="_3-1-5-ws" tabindex="-1">3.1.5 ws <a class="header-anchor" href="#_3-1-5-ws" aria-label="Permalink to &quot;3.1.5 ws&quot;">​</a></h4><h3 id="_3-2-php" tabindex="-1">3.2 php <a class="header-anchor" href="#_3-2-php" aria-label="Permalink to &quot;3.2 php&quot;">​</a></h3><p><a href="https://www.php.net/manual/zh/" target="_blank" rel="noreferrer">PHP: PHP 手册 - Manual</a></p><h3 id="_3-3-spring-boot" tabindex="-1">3.3 spring boot <a class="header-anchor" href="#_3-3-spring-boot" aria-label="Permalink to &quot;3.3 spring boot&quot;">​</a></h3><blockquote><p>开发后端，建议从上往下把握。</p></blockquote><ul><li><a href="https://mvnrepository.com/" target="_blank" rel="noreferrer">Maven</a></li><li>动态编译代码库 <ul><li>joor-java-9</li></ul></li></ul><h4 id="_3-4-专项方案" tabindex="-1">3.4 专项方案 <a class="header-anchor" href="#_3-4-专项方案" aria-label="Permalink to &quot;3.4 专项方案&quot;">​</a></h4><h5 id="_3-4-1-服务端执行系统代码-shell" tabindex="-1">3.4.1 服务端执行系统代码（Shell） <a class="header-anchor" href="#_3-4-1-服务端执行系统代码-shell" aria-label="Permalink to &quot;3.4.1 服务端执行系统代码（Shell）&quot;">​</a></h5><ul><li>C++：system，其中写上shell</li><li>Java：</li></ul><h2 id="四、服务通信" tabindex="-1">四、服务通信 <a class="header-anchor" href="#四、服务通信" aria-label="Permalink to &quot;四、服务通信&quot;">​</a></h2><h3 id="_4-1-web-http" tabindex="-1">4.1 Web HTTP <a class="header-anchor" href="#_4-1-web-http" aria-label="Permalink to &quot;4.1 Web HTTP&quot;">​</a></h3><ul><li>AJAX-XHR</li><li>Jquery-AJAX</li><li>Promise / fetch ：promise链 <ul><li>先res=&gt;res.json()；再处理data；最后.catch</li><li>配合加载器（取到时设为block；未取到设为none）</li><li>配合信息提示区：</li></ul></li><li>async/await：把调用的事件函数用 async 修饰为异步，在需要调用 url 、等待结果等异步行为处修饰 await。|每个 await 等待，不大适合连续的多个异步操作</li></ul><h3 id="_4-2-webrtc" tabindex="-1">4.2 WebRTC <a class="header-anchor" href="#_4-2-webrtc" aria-label="Permalink to &quot;4.2 WebRTC&quot;">​</a></h3><h3 id="_4-3-websocket" tabindex="-1">4.3 WebSocket <a class="header-anchor" href="#_4-3-websocket" aria-label="Permalink to &quot;4.3 WebSocket&quot;">​</a></h3><h2 id="五、数据库方案" tabindex="-1">五、数据库方案 <a class="header-anchor" href="#五、数据库方案" aria-label="Permalink to &quot;五、数据库方案&quot;">​</a></h2><h3 id="_5-1-mysql" tabindex="-1">5.1 Mysql <a class="header-anchor" href="#_5-1-mysql" aria-label="Permalink to &quot;5.1 Mysql&quot;">​</a></h3><h3 id="_5-2-redis" tabindex="-1">5.2 Redis <a class="header-anchor" href="#_5-2-redis" aria-label="Permalink to &quot;5.2 Redis&quot;">​</a></h3><h3 id="_5-3-notion-api" tabindex="-1">5.3 Notion API <a class="header-anchor" href="#_5-3-notion-api" aria-label="Permalink to &quot;5.3 Notion API&quot;">​</a></h3><h2 id="六、轻量部署" tabindex="-1">六、轻量部署 <a class="header-anchor" href="#六、轻量部署" aria-label="Permalink to &quot;六、轻量部署&quot;">​</a></h2><h3 id="_6-1-前端部署" tabindex="-1">6.1 前端部署 <a class="header-anchor" href="#_6-1-前端部署" aria-label="Permalink to &quot;6.1 前端部署&quot;">​</a></h3><blockquote><p>build打包文件，将build或dist目录部署</p><ul><li>gh-pages</li><li>netify：<a href="https://www.netlify.com/" target="_blank" rel="noreferrer">Netlify</a></li><li>直接拖动打包的build文件夹：<a href="https://app.netlify.com/teams/juemuel/sites" target="_blank" rel="noreferrer">Sites | juemuel | Netlify</a></li></ul></blockquote><h3 id="_6-2-后端部署" tabindex="-1">6.2 后端部署 <a class="header-anchor" href="#_6-2-后端部署" aria-label="Permalink to &quot;6.2 后端部署&quot;">​</a></h3><ul><li>Glitch</li><li>GoogleCloud：<a href="https://cloud.google.com/appengine?hl=zh-cn" target="_blank" rel="noreferrer">App Engine 应用平台 | Google Cloud</a></li><li>Dokku</li><li>Firebase <ul><li>host：部署静态内容</li><li>function：部署服务端内容（需要收费方案）</li></ul></li><li>Vercel：<a href="https://vercel.com/dashboard" target="_blank" rel="noreferrer">Dashboard</a><ul><li>基本使用：在git中创建后，在vercel中引入并部署（按需设置）</li><li>Doc：<a href="https://vercel.com/docs" target="_blank" rel="noreferrer">Vercel Documentation | Vercel Docs</a></li><li>前端部署：略</li><li>后端部署：<code>@vercel/node</code> 配置 <code>vercel.json</code>或 <code>now@latest</code> 配置<code>now.json</code>；不支持websocket等，见说明<a href="https://vercel.com/guides/do-vercel-serverless-functions-support-websocket-connections" target="_blank" rel="noreferrer">Do Vercel Serverless Functions support WebSocket connections?</a><ul><li>Vercel 上的 Serverless 函数是无状态的，并且具有最长的执行持续时间。因此，不可能维护到 Serverless 函数的 WebSocket 连接。本文提供了有关在应用程序中使用实时通信的信息，以及在哪里可以了解如何启用实时通信的更多信息。</li></ul></li></ul></li><li>heroku（收费了）</li><li>Okteto：<a href="https://www.okteto.com/free-trial/" target="_blank" rel="noreferrer">Free Okteto Self Hosted Trial | Okteto</a></li><li>CloudFlare： <ul><li>Cloud Flare Workers：做代理转发（监听网络请求替换api）</li><li>Cloud Flare Pages：</li></ul></li></ul><h2 id="七、服务器部署" tabindex="-1">七、服务器部署 <a class="header-anchor" href="#七、服务器部署" aria-label="Permalink to &quot;七、服务器部署&quot;">​</a></h2><h3 id="_7-1-ssh" tabindex="-1">7.1 SSH <a class="header-anchor" href="#_7-1-ssh" aria-label="Permalink to &quot;7.1 SSH&quot;">​</a></h3><ul><li><a href="http://www.hostbuf.com/t/988.html" target="_blank" rel="noreferrer">FinalShell SSH工具,2023.1.30</a></li></ul><h3 id="_7-2-docker" tabindex="-1">7.2 Docker <a class="header-anchor" href="#_7-2-docker" aria-label="Permalink to &quot;7.2 Docker&quot;">​</a></h3><h2 id="八、领域技术" tabindex="-1">八、领域技术 <a class="header-anchor" href="#八、领域技术" aria-label="Permalink to &quot;八、领域技术&quot;">​</a></h2><h3 id="_8-1-通用网站结构" tabindex="-1">8.1 通用网站结构 <a class="header-anchor" href="#_8-1-通用网站结构" aria-label="Permalink to &quot;8.1 通用网站结构&quot;">​</a></h3><h4 id="_8-1-1-单页大屏" tabindex="-1">8.1.1 单页大屏 <a class="header-anchor" href="#_8-1-1-单页大屏" aria-label="Permalink to &quot;8.1.1 单页大屏&quot;">​</a></h4><h4 id="_8-1-2-spa-结构" tabindex="-1">8.1.2 SPA 结构 <a class="header-anchor" href="#_8-1-2-spa-结构" aria-label="Permalink to &quot;8.1.2 SPA 结构&quot;">​</a></h4><h4 id="_8-1-3-mpa-结构" tabindex="-1">8.1.3 MPA 结构 <a class="header-anchor" href="#_8-1-3-mpa-结构" aria-label="Permalink to &quot;8.1.3 MPA 结构&quot;">​</a></h4><h3 id="_8-2-网站类型" tabindex="-1">8.2 网站类型 <a class="header-anchor" href="#_8-2-网站类型" aria-label="Permalink to &quot;8.2 网站类型&quot;">​</a></h3><h4 id="_8-2-1-可视化" tabindex="-1">8.2.1 可视化 <a class="header-anchor" href="#_8-2-1-可视化" aria-label="Permalink to &quot;8.2.1 可视化&quot;">​</a></h4><h5 id="_8-2-1-1-地图可视化" tabindex="-1">8.2.1.1 地图可视化 <a class="header-anchor" href="#_8-2-1-1-地图可视化" aria-label="Permalink to &quot;8.2.1.1 地图可视化&quot;">​</a></h5><h5 id="_8-2-2-2-图表可视化" tabindex="-1">8.2.2.2 图表可视化 <a class="header-anchor" href="#_8-2-2-2-图表可视化" aria-label="Permalink to &quot;8.2.2.2 图表可视化&quot;">​</a></h5><h4 id="_8-2-2-后台管理" tabindex="-1">8.2.2 后台管理 <a class="header-anchor" href="#_8-2-2-后台管理" aria-label="Permalink to &quot;8.2.2 后台管理&quot;">​</a></h4><h4 id="_8-2-3-文本渲染" tabindex="-1">8.2.3 文本渲染 <a class="header-anchor" href="#_8-2-3-文本渲染" aria-label="Permalink to &quot;8.2.3 文本渲染&quot;">​</a></h4><h4 id="_8-2-4-电商" tabindex="-1">8.2.4 电商 <a class="header-anchor" href="#_8-2-4-电商" aria-label="Permalink to &quot;8.2.4 电商&quot;">​</a></h4><h4 id="_8-2-5-物联网" tabindex="-1">8.2.5 物联网 <a class="header-anchor" href="#_8-2-5-物联网" aria-label="Permalink to &quot;8.2.5 物联网&quot;">​</a></h4><h4 id="_8-2-6-webgl-3d" tabindex="-1">8.2.6 WebGL 3D <a class="header-anchor" href="#_8-2-6-webgl-3d" aria-label="Permalink to &quot;8.2.6 WebGL 3D&quot;">​</a></h4><ul><li>3D 素材 <ul><li>3D物件</li><li>立体展示</li><li>地图+</li><li>交互性建筑设计</li><li>平面设计</li><li>pony 风格（模型）</li></ul></li><li>Blender 建模</li></ul><h2 id="九、通用能力" tabindex="-1">九、通用能力 <a class="header-anchor" href="#九、通用能力" aria-label="Permalink to &quot;九、通用能力&quot;">​</a></h2><h3 id="_9-1-代码原则" tabindex="-1">9.1 代码原则 <a class="header-anchor" href="#_9-1-代码原则" aria-label="Permalink to &quot;9.1 代码原则&quot;">​</a></h3><ul><li>DRY</li><li>SOLID：单一责任、开放封闭、替代原则、接口隔离、依赖反转</li></ul><h3 id="_9-2-调试" tabindex="-1">9.2 调试 <a class="header-anchor" href="#_9-2-调试" aria-label="Permalink to &quot;9.2 调试&quot;">​</a></h3><ul><li>调试工具1：<code>console</code><ul><li>日志：console.log</li><li>表格：console.table，适合数组、对象</li></ul></li><li>调试工具2：VsCode调试器 <ul><li>左侧debug，选run and debug</li><li>标断点：红色</li><li>顶部controls：continue、step over、step into、step out、restart、stop</li></ul></li><li>调试工具3：开发者工具-inspect <ul><li>标断点：蓝色</li></ul></li></ul><h3 id="_9-3-测试" tabindex="-1">9.3 测试 <a class="header-anchor" href="#_9-3-测试" aria-label="Permalink to &quot;9.3 测试&quot;">​</a></h3><ul><li>参考博客文档 <ul><li><a href="https://github.yanhaixiang.com/jest-tutorial/basic/snapshot-test/#title-%E7%BB%84%E4%BB%B6" target="_blank" rel="noreferrer">快照测试 | Jest 实践指南</a></li><li><a href="https://juejin.cn/post/6985840134046351367" target="_blank" rel="noreferrer">前端单测学习（1）—— 单测入门之react单测项目初步 - 掘金</a></li><li><a href="https://alexjover.com/blog/write-the-first-vue-js-component-unit-test-in-jest/" target="_blank" rel="noreferrer">Write the first Vue.js Component Unit Test in Jest | Alex Jover</a></li></ul></li></ul><h4 id="_9-3-1-测试类型" tabindex="-1">9.3.1 测试类型 <a class="header-anchor" href="#_9-3-1-测试类型" aria-label="Permalink to &quot;9.3.1 测试类型&quot;">​</a></h4><ul><li>单元测试：只测试实现的某个部分（不用依赖关系或集成） <ul><li>渲染测试</li><li>快照测试</li><li>交互测试</li></ul></li><li>集成测试：当代码与数据库、文件系统或第三方通信时，需要用集成测试来测试（设置测试环境、依赖关系）</li><li>功能测试：从用户角度测试系统是否按预期工作。</li></ul><h4 id="_9-3-2-测试框架" tabindex="-1">9.3.2 测试框架 <a class="header-anchor" href="#_9-3-2-测试框架" aria-label="Permalink to &quot;9.3.2 测试框架&quot;">​</a></h4><h5 id="jest-单测大成-facebook出品" tabindex="-1">Jest：单测大成，Facebook出品 <a class="header-anchor" href="#jest-单测大成-facebook出品" aria-label="Permalink to &quot;Jest：单测大成，Facebook出品&quot;">​</a></h5><ul><li>文档：<a href="https://jestjs.io/" target="_blank" rel="noreferrer">Jest</a>、<a href="https://runebook.dev/zh/docs/jest/-index-" target="_blank" rel="noreferrer">runbook Jest</a></li><li>基本使用方式 <ul><li>test/it：单用例测试</li><li><a href="https://jestjs.io/docs/api#describename-fn" target="_blank" rel="noreferrer">Describe/it</a>：成组用例测试</li></ul></li><li>前端JS单测逻辑（一般对模块化对象做测试） <ul><li>普通函数单测</li><li>异步方案单测</li><li>Ajax通信单测</li><li>类与对象单测</li><li>代码覆盖率</li></ul></li><li>前端框架单测逻辑 <ul><li>渲染测试：测试组件是否正常渲染<div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">it</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">渲染 XX 元素</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 渲染被测试组件</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 抓取需要检测的元素</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 进行是否成功渲染的断言</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div></li><li>快照测试：测试组件结构变化（输出复杂时用快照比较方便） <ul><li>不变：则没有影响</li><li>变化：Bug 或 该测试内容DOM结构发生新变化（假错误），此时更新快照</li></ul></li><li>交互测试</li></ul></li><li>服务端单测逻辑</li></ul><h5 id="selenium" tabindex="-1">Selenium <a class="header-anchor" href="#selenium" aria-label="Permalink to &quot;Selenium&quot;">​</a></h5><h4 id="⭐️9-3-3-js逻辑单测" tabindex="-1">⭐️9.3.3 JS逻辑单测 <a class="header-anchor" href="#⭐️9-3-3-js逻辑单测" aria-label="Permalink to &quot;⭐️9.3.3 JS逻辑单测&quot;">​</a></h4><h4 id="⭐️9-3-4-react前端单测" tabindex="-1">⭐️9.3.4 React前端单测 <a class="header-anchor" href="#⭐️9-3-4-react前端单测" aria-label="Permalink to &quot;⭐️9.3.4 React前端单测&quot;">​</a></h4><ul><li>选型：<a href="https://jestjs.io/" target="_blank" rel="noreferrer">Jest</a> + <a href="https://testing-library.com/docs/queries/about/" target="_blank" rel="noreferrer">React Testing Library</a></li><li>文档：<a href="https://www.jestjs.cn/docs/tutorial-react" target="_blank" rel="noreferrer">Jest - Testing React Apps</a></li><li>项目环境1：create-react-app</li><li>项目环境2：非create-react-app</li><li>测试文件位置：同目录同名 xx.test.js</li><li>实践API索引 <ul><li>组件渲染测试：用 <a href="https://testing-library.com/docs/queries/about/" target="_blank" rel="noreferrer">Queries API</a>，取渲染组件</li><li>快照测试：</li><li>交互测试：<a href="https://testing-library.com/docs/ecosystem-user-event/" target="_blank" rel="noreferrer">user-event</a></li><li>路由测试</li><li>Ajax 测试</li></ul></li></ul><h4 id="⭐️9-3-5-vue前端单测" tabindex="-1">⭐️9.3.5 Vue前端单测 <a class="header-anchor" href="#⭐️9-3-5-vue前端单测" aria-label="Permalink to &quot;⭐️9.3.5 Vue前端单测&quot;">​</a></h4><ul><li>选型：<a href="https://jestjs.io/" target="_blank" rel="noreferrer">Jest</a> + Vue Test Utils</li><li>项目环境1：vue-cli创建时选择Unit Testing和Jest</li><li>项目环境2：Vue ➕ <code>vue add @vue/unit-jest</code></li><li>项目环境3：Vue ➕ <code>npm install --save-dev jest @vue/test-utils babel-jest vue-jest babel-core@7.0.0-bridge.0 jest-serializer-vue</code>，并配置 jest文件</li><li>测试文件位置：</li></ul><h4 id="⭐️9-3-6-node服务单测" tabindex="-1">⭐️9.3.6 Node服务单测 <a class="header-anchor" href="#⭐️9-3-6-node服务单测" aria-label="Permalink to &quot;⭐️9.3.6 Node服务单测&quot;">​</a></h4><ul><li>选型：Jest、supertest、cross-env</li><li>文档：</li><li>项目环境1：node express</li><li>测试文件位置：</li></ul><h3 id="_9-4-抓包" tabindex="-1">9.4 抓包 <a class="header-anchor" href="#_9-4-抓包" aria-label="Permalink to &quot;9.4 抓包&quot;">​</a></h3><h3 id="_9-5-爬虫" tabindex="-1">9.5 爬虫 <a class="header-anchor" href="#_9-5-爬虫" aria-label="Permalink to &quot;9.5 爬虫&quot;">​</a></h3><h2 id="十、语法糖串联" tabindex="-1">十、语法糖串联 <a class="header-anchor" href="#十、语法糖串联" aria-label="Permalink to &quot;十、语法糖串联&quot;">​</a></h2><h3 id="_10-1-事件语法糖" tabindex="-1">10.1 事件语法糖 <a class="header-anchor" href="#_10-1-事件语法糖" aria-label="Permalink to &quot;10.1 事件语法糖&quot;">​</a></h3><h3 id="_10-2-事件特殊应用" tabindex="-1">10.2 事件特殊应用 <a class="header-anchor" href="#_10-2-事件特殊应用" aria-label="Permalink to &quot;10.2 事件特殊应用&quot;">​</a></h3><ul><li>复用组件的有状态函数应保证独立性 <ul><li>Vue2 中一个复用组件的有状态函数（如debounce 等）应设置在 created 中，保证每个实例互不干扰：<a href="https://vuejs.org/guide/essentials/reactivity-fundamentals.html#stateful-methods" target="_blank" rel="noreferrer">Reactivity Fundamentals | Vue.js</a></li></ul></li></ul><h3 id="_10-3-取值" tabindex="-1">10.3 取值 <a class="header-anchor" href="#_10-3-取值" aria-label="Permalink to &quot;10.3 取值&quot;">​</a></h3><h2 id="十一、附录" tabindex="-1">十一、附录 <a class="header-anchor" href="#十一、附录" aria-label="Permalink to &quot;十一、附录&quot;">​</a></h2><h3 id="文件式路由" tabindex="-1">文件式路由 <a class="header-anchor" href="#文件式路由" aria-label="Permalink to &quot;文件式路由&quot;">​</a></h3><ul><li>pages下index即，对应根目录路由</li><li>api目录下/hello.ts，即api/hello</li></ul>`,220),o=[r];function s(n,c,h,u,d,p){return e(),l("div",null,o)}const q=a(t,[["render",s]]);export{m as __pageData,q as default};
